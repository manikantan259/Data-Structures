package target;

class ListNode {
    int val;
    ListNode next;
    ListNode(int val) { this.val = val; this.next = null; }
}
public class MergeTwoSortedLists {

	private ListNode mergeTwoLists(ListNode list1 ,ListNode list2) {
		
		
		ListNode dummy = new ListNode(-1);
		ListNode tail = dummy;
		
		while (list1 != null && list2 != null) {
			
			if (list1.val < list2.val) {
				
				tail.next = list1;
				
				list1 = list1.next;
				
			}else {
				
				 tail.next = list2;
	             list2 = list2.next;
			}
			 tail = tail.next; 
			
		}
		
		tail.next = (list1 != null ) ? list1 :list2;
		return dummy.next;
		
	}
	
	
	  public void printList(ListNode head) {
	        ListNode curr = head;
	        while (curr != null) {
	            System.out.print(curr.val + " -> ");
	            curr = curr.next;
	        }
	        System.out.println("null");
	    }

	    public static void main(String[] args) {
	        MergeTwoSortedLists obj = new MergeTwoSortedLists();

	        // Creating first sorted linked list: 1 -> 3 -> 5
	        ListNode list1 = new ListNode(1);
	        list1.next = new ListNode(3);
	        list1.next.next = new ListNode(5);

	        // Creating second sorted linked list: 2 -> 4 -> 6
	        ListNode list2 = new ListNode(2);
	        list2.next = new ListNode(4);
	        list2.next.next = new ListNode(6);

	        System.out.println("List 1:");
	        obj.printList(list1);
	        
	        System.out.println("List 2:");
	        obj.printList(list2);

	        // Merging the lists
	        ListNode mergedList = obj.mergeTwoLists(list1, list2);
	        System.out.println("Merged List:");
	        obj.printList(mergedList);
	    }
	}
