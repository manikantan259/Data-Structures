package target;

class ListNode {
    int val;
    ListNode next;
    ListNode(int val) { this.val = val; }
}

public class RemoveNthNode {
	
	
	public ListNode removeNthFromEnd(ListNode head, int n) {
		
		
		ListNode dummy = new ListNode(-1);
		dummy.next = head;
		ListNode slow = dummy;
		ListNode fast = dummy;
		
		
		for (int i=0 ; i < n ; i++) {
			fast = fast.next;
			
		}
		
		while (fast.next  != null) {
			slow = slow.next;
			fast = fast.next;
		}
		
		slow.next = slow.next.next;
		
		return dummy.next;
		
	}
	 // Utility function to print the linked list
    public static void printList(ListNode head) {
        ListNode curr = head;
        while (curr != null) {
            System.out.print(curr.val + " -> ");
            curr = curr.next;
        }
        System.out.println("null");
    }

	public static void main(String[] args) {
        RemoveNthNode obj = new RemoveNthNode();
        ListNode head = new ListNode(1);
        head.next = new ListNode(2);
        head.next.next = new ListNode(3);
        head.next.next.next = new ListNode(4);
        head.next.next.next.next = new ListNode(5);

        System.out.println("Original List:");
        printList(head);

        int n = 2;
        head = obj.removeNthFromEnd(head, n);

        System.out.println("List after removing " + n + "th node from end:");
        printList(head);
    }
}
